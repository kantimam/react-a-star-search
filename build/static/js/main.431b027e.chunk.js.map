{"version":3,"sources":["components/icons/gear.jsx","components/UiContainer.jsx","util/util.js","path-finder/path-finder.js","components/Node.jsx","components/Field.jsx","components/AStar.jsx","App.js","serviceWorker.js","index.js"],"names":["gear","width","height","version","viewBox","xmlns","x","y","xmlSpace","fill","d","UiContainer","finder","reset","uiMode","updateDim","useState","settings","toggleSettings","frameRate","fps","setFps","fieldWidth","col","setCol","fieldHeight","row","setRow","id","className","onChange","event","target","value","type","min","max","onClick","preventDefault","setSize","findRandomPath","runStep","run","randomInt","start","end","Math","floor","random","Pathfinder","uiFunction","console","log","openSet","Set","closedSet","loop","steps","finished","running","path","setHeuristic","from","to","hypot","checkDia","drawFunction","this","field","dimX","dimY","out","Array","i","length","create2dArray","Number","clearTimeout","clear","fillField","fieldFlat","flat","drawField","draw","add","node","randomStart","randomEnd","startNode","endNode","findValidPaths","setInterval","step","size","findLowestFScore","updateSets","checkNeigbors","clearInterval","lastNode","current","cameFrom","push","currentPath","createPath","values","next","f","drawPath","delete","neighbors","has","tempG","g","h","blocked","setStart","setEnd","Node","colors","memo","item","nodeOnClick","createWall","color","setColor","onMouseMove","buttons","style","left","top","backgroundColor","fieldRef","useRef","setWidth","resize","clientWidth","cellSize","useLayoutEffect","useEffect","window","addEventListener","removeEventListener","ref","map","key","AStar","props","React","createRef","bind","state","setState","init","data","setStartNode","setEndNode","Component","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.431b027e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst gear = ({width=32, height=32}) => {\r\n    return (\r\n        <svg height={height} width={width} version=\"1.1\" viewBox=\"0 0 64 64\" xmlns=\"http://www.w3.org/2000/svg\" x=\"0px\" y=\"0px\" xmlSpace=\"preserve\">\r\n            <title>settings gear 63</title>\r\n            <g fill=\"#111111\">\r\n                <path d=\"M62.132,27.009L54.19,25.95c-0.516-1.896-1.268-3.693-2.223-5.36l4.869-6.367 c0.304-0.398,0.267-0.96-0.087-1.314l-5.657-5.657c-0.355-0.355-0.916-0.394-1.314-0.087l-6.367,4.869 c-1.667-0.955-3.464-1.707-5.36-2.223l-1.059-7.942C36.925,1.371,36.501,1,36,1h-8c-0.501,0-0.925,0.371-0.991,0.868L25.95,9.81 c-1.896,0.516-3.693,1.268-5.36,2.223l-6.367-4.869c-0.398-0.306-0.96-0.268-1.314,0.087l-5.657,5.657 c-0.354,0.354-0.392,0.916-0.087,1.314l4.869,6.367c-0.955,1.667-1.707,3.464-2.223,5.36l-7.942,1.059C1.371,27.075,1,27.499,1,28v8 c0,0.501,0.371,0.925,0.868,0.991L9.81,38.05c0.516,1.896,1.268,3.693,2.223,5.36l-4.869,6.367c-0.304,0.398-0.267,0.96,0.087,1.314 l5.657,5.657c0.194,0.194,0.45,0.293,0.708,0.293c0.213,0,0.427-0.067,0.607-0.206l6.367-4.869c1.667,0.955,3.464,1.707,5.36,2.223 l1.059,7.942C27.075,62.629,27.499,63,28,63h8c0.501,0,0.925-0.371,0.991-0.868l1.059-7.942c1.896-0.516,3.693-1.268,5.36-2.223 l6.367,4.869c0.18,0.139,0.394,0.206,0.607,0.206c0.258,0,0.514-0.099,0.708-0.293l5.657-5.657c0.354-0.354,0.392-0.916,0.087-1.314 l-4.869-6.367c0.955-1.667,1.707-3.464,2.223-5.36l7.942-1.059C62.629,36.925,63,36.501,63,36v-8 C63,27.499,62.629,27.075,62.132,27.009z M32,41c-4.971,0-9-4.029-9-9c0-4.971,4.029-9,9-9c4.971,0,9,4.029,9,9 C41,36.971,36.971,41,32,41z\" fill=\"#111111\" />\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default gear\r\n","import React, {useState} from 'react'\r\nimport Gear from './icons/gear'\r\n\r\nconst UiContainer = ({finder, reset, uiMode, updateDim}) => {\r\n    const [settings, toggleSettings]=useState(false);\r\n    const [fps, setFps]=useState(finder.frameRate);\r\n    const [col, setCol]=useState(finder.fieldWidth)\r\n    const [row, setRow]=useState(finder.fieldHeight)\r\n    const done=(event)=>{\r\n        event.preventDefault();\r\n        if(col!=finder.fieldWidth || row!=finder.fieldHeight){\r\n            finder.setSize(col, row);\r\n            updateDim(col, row);\r\n        }\r\n        finder.frameRate=fps;\r\n        toggleSettings(false);\r\n    }\r\n\r\n\r\n    if(!finder) return (\r\n        <div id=\"uiContainer\" className=\"fancyShadow\">\r\n            <h1 className=\"fancyShadow infoHeader\">LOADING</h1>\r\n        </div>\r\n        )\r\n    return (\r\n        <div id=\"uiContainer\" className=\"fancyShadow\">\r\n            {settings?\r\n                <>\r\n                    <div className=\"inputWrapper\">\r\n                        <div className=\"fancyShadow\">\r\n                            <p>FPS {fps}</p>\r\n                            <input onChange={(event)=>setFps(event.target.value)} type=\"range\" min=\"1\" max=\"60\" value={fps}/>\r\n                        </div>\r\n                        <div className=\"fancyShadow\">\r\n                            <p>COL {col}</p>\r\n                            <input onChange={(event)=>setCol(event.target.value)} type=\"range\" min=\"2\" max=\"100\" value={col}/>\r\n                        </div>\r\n                        <div className=\"fancyShadow\">\r\n                            <p>ROW {row}</p>\r\n                            <input onChange={(event)=>setRow(event.target.value)} type=\"range\" min=\"2\" max=\"100\"value={row}/>\r\n                        </div>\r\n                    </div>\r\n                    <button onClick={done} id=\"settingsButton\" className=\"fancyShadow\">UPDATE</button>\r\n                </>:\r\n                <>\r\n                    <div onClick={()=>toggleSettings(true)} className=\"toggleSettings fancyShadow\">\r\n                        <Gear/>\r\n                    </div>\r\n                    <h1 className=\"fancyShadow infoHeader\">{uiMode}</h1>\r\n                    <button className={`fancyShadow`} onClick={() => finder.findRandomPath()}>random path</button>\r\n                    <button className=\"fancyShadow\" onClick={() => finder.runStep()}>STEP</button>\r\n                    <button className=\"fancyShadow\" onClick={() => finder.run()}>START</button>\r\n                    <button className=\"fancyShadow\" onClick={reset}>RESET</button>\r\n                </>\r\n            }\r\n        </div>\r\n               \r\n    )\r\n}\r\n\r\nexport default UiContainer\r\n","export function create2dArray(dimX, dimY){\r\n    const out=new Array(dimY);\r\n    for(let i=0;i<out.length;i++) out[i]=new Array(dimX).fill(0);\r\n    return out;\r\n}\r\n\r\nexport const randomInt=(start, end)=>Math.floor(Math.random()*(end-start+1))+start;\r\n\r\n","import {randomInt, create2dArray} from '../util/util'\r\n\r\nexport class Pathfinder{\r\n    field; // actual 2d grid\r\n    fieldWidth;\r\n    fieldHeight;\r\n    drawFunction;  // function to draw the field setState in this case\r\n    uiFunction=()=>console.log(\"no function to update react ui set\")\r\n    fieldFlat; // 1dim version of the grid for easier looping and drawing\r\n    frameRate=10;\r\n\r\n    openSet=new Set();\r\n    closedSet=new Set();\r\n    start;\r\n    end;\r\n    current;\r\n\r\n    loop=null;\r\n    steps=0;\r\n    finished=false;\r\n    running=false;\r\n\r\n    path=[]\r\n\r\n    \r\n    // move here from constructor\r\n    init(col, row, drawFunction, uiFunction){\r\n        this.drawFunction=drawFunction;\r\n        if(uiFunction) this.uiFunction=uiFunction;\r\n        this.setSize(col, row)\r\n    }\r\n\r\n    setSize(col, row){\r\n        console.log(col, row)\r\n        this.field=create2dArray(Number(col), Number(row));\r\n        this.fieldWidth=this.field[0].length;\r\n        this.fieldHeight=this.field.length;\r\n        this.reset();\r\n    }\r\n\r\n    reset(){\r\n        this.finished=false;\r\n        this.running=false;\r\n        this.steps=0;\r\n        this.path=[];\r\n        if(this.loop) clearTimeout(this.loop);\r\n        this.openSet.clear();\r\n        this.closedSet.clear();\r\n        this.fillField();\r\n        this.start=null;\r\n        this.end=null;\r\n        this.fieldFlat=this.field.flat(1);\r\n        this.drawField();\r\n        this.uiFunction(\"SET START\");\r\n    }\r\n\r\n   \r\n\r\n\r\n    setStart(x,y){\r\n        this.start=this.field[y][x];\r\n        this.start.draw=1;\r\n        this.openSet.add(this.start);\r\n\r\n        this.uiFunction(\"SET END\");\r\n\r\n    }\r\n\r\n    setEnd(x,y){\r\n        this.end=this.field[y][x];\r\n        this.end.draw=3;\r\n\r\n        this.uiFunction(\"SET BLOCKED\");\r\n\r\n    }\r\n\r\n    setStartNode(node){\r\n        this.start=node;\r\n        this.start.draw=1;\r\n        this.openSet.add(this.start);\r\n\r\n        this.uiFunction(\"SET END\");\r\n\r\n    }\r\n\r\n    setEndNode(node){\r\n        this.end=node;\r\n        this.end.draw=3;\r\n\r\n        this.uiFunction(\"SET BLOCKED\");\r\n    }\r\n\r\n\r\n    findRandomPath(){\r\n        if(!this.finished && !this.running){\r\n            this.randomStart();\r\n            this.randomEnd();\r\n            this.run();\r\n        } \r\n    }\r\n\r\n    findFromTo(startNode, endNode){\r\n        this.start=startNode;\r\n        this.end=endNode;\r\n        this.run();\r\n    }\r\n\r\n\r\n    run(){\r\n        /* dont allow to restart while still running */\r\n        if(this.finished || this.running){\r\n            this.uiFunction(\"RESET FIRST\") \r\n            return console.log(\"reset before starting a new finder\");\r\n        }\r\n        if(!this.field.length || !this.drawFunction) return console.log(\"seems like init failed\");\r\n        if(!this.start) return console.log(\"please set a start node. setStart(x,y)\");\r\n        if(!this.end) return console.log(\"please set a end node. setEnd(x,y)\");\r\n        \r\n        this.drawField();\r\n        this.findValidPaths();\r\n\r\n        this.uiFunction(\"RUNNING\");\r\n\r\n        this.running=true;\r\n\r\n        this.loop=setInterval(()=>{\r\n            this.step();\r\n        }, 1000/this.frameRate)\r\n        \r\n    }\r\n\r\n\r\n    runStep(){\r\n        if(this.finished || this.running){ \r\n            this.uiFunction(\"RESET FIRST\") \r\n            return console.log(\"reset before starting a new finder\")\r\n        }\r\n\r\n        // if its the first step prepare nodes\r\n        if(!this.steps){\r\n            if(!this.field.length || !this.drawFunction) return console.log(\"seems like init failed\");\r\n            if(!this.start) return console.log(\"please set a start node. setStart(x,y)\");\r\n            if(!this.end) return console.log(\"please set a end node. setEnd(x,y)\");\r\n            \r\n            this.drawField();\r\n            this.findValidPaths();\r\n            \r\n            this.uiFunction(\"CLICK STEP OR RUN\");\r\n        }\r\n        this.step();\r\n        \r\n    }\r\n\r\n    step(){\r\n        if(this.openSet.size){\r\n            this.findLowestFScore();\r\n            this.updateSets();\r\n            this.checkNeigbors();\r\n            //this.drawPath();\r\n            this.drawField();\r\n            this.steps++;\r\n        }else{ \r\n            clearInterval(this.loop);\r\n            this.finished=true;\r\n            this.running=false;\r\n            this.uiFunction(\"COULD NOT BE SOLVED\");\r\n            console.log(\"could not be solved! :(\")\r\n        }\r\n    }\r\n\r\n    drawField(){\r\n        // looks like drawing with this many divs takes ages :( maybe move to webgl canvas \r\n        this.drawFunction([...this.fieldFlat]);\r\n    }\r\n\r\n\r\n    createPath(){\r\n        const path=[]\r\n        let lastNode=this.current;\r\n        while(lastNode.cameFrom){\r\n            path.push(lastNode)\r\n            lastNode=lastNode.cameFrom;\r\n        }\r\n        return path;\r\n    }\r\n\r\n    drawPath(){\r\n      const currentPath=this.createPath();\r\n      for(let i=0; i<currentPath.length; i++){\r\n        currentPath[i].draw=4;\r\n      }\r\n      this.start.draw=1;\r\n      this.end.draw=3;\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n    findLowestFScore(){\r\n        this.min=this.openSet.values().next().value;\r\n        //console.log(this.openSet.size)\r\n        for(let node of this.openSet){\r\n            if(node.f<this.min.f) this.min=node;\r\n        }\r\n        this.current=this.min;\r\n    }\r\n    \r\n    updateSets(){\r\n        if(this.current===this.end){\r\n            // stop looping when done\r\n            clearTimeout(this.loop); \r\n            this.current.draw=3\r\n            console.log(\"solved! :3\")\r\n            this.finished=true;\r\n            this.uiFunction(\"SOLVED! :)\")\r\n            return this.drawPath();\r\n        };\r\n        this.openSet.delete(this.current);\r\n        this.closedSet.add(this.current);\r\n\r\n        this.current.draw=2;\r\n        \r\n    }\r\n\r\n    \r\n\r\n    checkNeigbors(){\r\n\r\n        for(let i=0; i<this.current.neighbors.length; i++){\r\n\r\n            if(!this.closedSet.has(this.current.neighbors[i])){ \r\n\r\n                let tempG=this.current.g+this.checkDia(this.current, this.current.neighbors[i]);\r\n                if(!this.openSet.has(this.current.neighbors[i])){\r\n                    this.openSet.add(this.current.neighbors[i]);\r\n                }else if(tempG>=this.current.neighbors[i].g){\r\n                    continue;\r\n                } \r\n                \r\n                this.current.neighbors[i].g=tempG;\r\n\r\n                this.current.neighbors[i].cameFrom=this.current;\r\n\r\n\r\n                this.current.neighbors[i].h=this.setHeuristic(this.current.neighbors[i], this.end);\r\n                this.current.neighbors[i].f=this.current.neighbors[i].h+this.current.neighbors[i].g;\r\n            }\r\n        }\r\n    }\r\n\r\n    /* just the distance for now */\r\n    setHeuristic=(from, to)=> Math.hypot(to.x-from.x, to.y-from.y);\r\n\r\n    /* stupid but fast as long as standart distance stays 1 :) */\r\n    checkDia=(from, to)=>(from.x-to.x && from.y-to.y)? 1.414 : 1; \r\n\r\n    // old using and updating findValidPaths for now\r\n    findNeighbors(){\r\n        for(let y=0; y<this.fieldHeight; y++){\r\n            for(let x=0; x<this.fieldWidth; x++){\r\n                y>0 && this.field[y][x].neighbors.push(this.field[y-1][x]);\r\n                x<this.fieldWidth-1 && this.field[y][x].neighbors.push(this.field[y][x+1]);\r\n                y<this.fieldHeight-1 && this.field[y][x].neighbors.push(this.field[y+1][x]);\r\n                x>0 && this.field[y][x].neighbors.push(this.field[y][x-1]);\r\n            }\r\n        }\r\n    }\r\n\r\n    findValidPaths(){\r\n        for(let y=0; y<this.fieldHeight; y++){\r\n            for(let x=0; x<this.fieldWidth; x++){\r\n                \r\n                if(y>0 && !this.field[y-1][x].blocked){\r\n                    this.field[y][x].neighbors.push(this.field[y-1][x]); // top\r\n                }\r\n\r\n                if(y>0 && x<this.fieldWidth-1 && !this.field[y-1][x+1].blocked){\r\n                    this.field[y][x].neighbors.push(this.field[y-1][x+1]); // top right\r\n                }\r\n                \r\n                if(x<this.fieldWidth-1 && !this.field[y][x+1].blocked){\r\n                    this.field[y][x].neighbors.push(this.field[y][x+1]); // right\r\n                } \r\n                \r\n                if(y<this.fieldHeight-1 && x<this.fieldWidth-1 && !this.field[y+1][x+1].blocked){\r\n                    this.field[y][x].neighbors.push(this.field[y+1][x+1]); // bottom right\r\n                }\r\n\r\n                if(y<this.fieldHeight-1 && !this.field[y+1][x].blocked){\r\n                    this.field[y][x].neighbors.push(this.field[y+1][x]); // bottom\r\n                } \r\n\r\n                if(y<this.fieldHeight-1 && x>0 && !this.field[y+1][x-1].blocked){\r\n                    this.field[y][x].neighbors.push(this.field[y+1][x-1]); // bottom left\r\n                }\r\n                \r\n                if(x>0 && !this.field[y][x-1].blocked){\r\n                    this.field[y][x].neighbors.push(this.field[y][x-1]); // left\r\n                } \r\n\r\n                if(y>0 && x>0 && !this.field[y-1][x-1].blocked){\r\n                    this.field[y][x].neighbors.push(this.field[y-1][x-1]); // top left\r\n                } \r\n\r\n            }\r\n        }\r\n    }\r\n\r\n    randomStart(){\r\n        this.setStart(randomInt(0, this.fieldWidth-1), randomInt(0, this.fieldHeight-1));\r\n    }\r\n\r\n    randomEnd(){\r\n        this.setEnd(randomInt(0, this.fieldWidth-1), randomInt(0, this.fieldHeight-1));\r\n    }\r\n\r\n    fillField(size){\r\n        for(let y=0; y<this.fieldHeight; y++){\r\n            for(let x=0; x<this.fieldWidth; x++){\r\n                this.field[y][x]=new Node(x,y,size);\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nclass Node{\r\n    neighbors=[];\r\n    cameFrom;\r\n    f=0;\r\n    g=0;\r\n    h=0;\r\n\r\n    draw=0;\r\n    blocked=false;\r\n    constructor(x, y, size){\r\n        this.x=x;\r\n        this.y=y;\r\n        this.size=size;\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\nexport default Pathfinder;","import React, {memo, useState} from 'react'\r\n\r\nconst colors=[\"white\", \"red\", \"green\", \"blue\", \"yellow\", \"black\"]\r\n\r\n\r\nconst Node = ({width, height, item, nodeOnClick, createWall}) => {\r\n    const [color, setColor]=useState(colors[item.draw])\r\n    const setNode=()=>{\r\n        /* set start and end node */\r\n        nodeOnClick(item);\r\n        createWall(item);\r\n        setColor(colors[item.draw]);\r\n    }\r\n    const blockPath=(event)=>{\r\n        /* make your click dragable so you can paint walls easier */\r\n        if(event.buttons===1){\r\n            createWall(item);\r\n            setColor(colors[item.draw]);\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <div\r\n            onClick={setNode}\r\n            onMouseMove={blockPath}\r\n            className=\"cell\"\r\n            style={{\r\n                width: `${width}px`, \r\n                height: `${height}px`, \r\n                /* left: `${x*width}px`, \r\n                top: `${y*height}px`, */\r\n\r\n                left: `${item.x*width}px`, \r\n                top: `${item.y*height}px`,\r\n                backgroundColor: color \r\n            }}\r\n        >\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default memo(Node/* , (current, next)=>{\r\n    return current.item.draw===next.item.draw\r\n} */)\r\n","import React, {memo, useLayoutEffect, useEffect, useRef, useState} from 'react'\r\nimport Node from './Node';\r\n\r\n\r\nconst Field = ({field, row, col, createWall, nodeOnClick}) => {\r\n    const fieldRef=useRef(null);\r\n    const [width, setWidth]=useState(0);\r\n\r\n    const resize=()=>{\r\n        if (fieldRef.current.clientWidth > 0) {\r\n            const cellSize = fieldRef.current.clientWidth / col;\r\n            setWidth(cellSize);\r\n        }\r\n    }\r\n\r\n    useLayoutEffect(() => {\r\n        resize();\r\n        \r\n    }, [field, row, col, createWall, nodeOnClick])\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"resize\", resize);\r\n        return () => {\r\n            window.removeEventListener(\"resize\", resize);\r\n        };\r\n    }, [])\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"fieldContainer fancyShadow\">\r\n        <div style={{height: `${width*row}px`}} ref={fieldRef} className=\"field\">\r\n            {width && field.map((item) =>\r\n                <Node\r\n                    key={\"key\" + item.x + \"_\" + item.y + \"_\" + item.draw}\r\n                    width={width}\r\n                    height={width}\r\n                    item={item}\r\n                    nodeOnClick={nodeOnClick}\r\n                    createWall={createWall}\r\n                />\r\n            )}\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default memo(Field)\r\n","import React, { Component } from 'react'\r\nimport UiContainer from \"./UiContainer\"\r\nimport { Pathfinder } from '../path-finder/path-finder.js';\r\nimport Field from './Field';\r\n\r\n\r\nexport default class AStar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.fieldRef = React.createRef();\r\n\r\n        this.finder = new Pathfinder();\r\n        if(this.props.frameRate) this.finder.frameRate=this.props.frameRate;\r\n\r\n        this.nodeOnClick = this.nodeOnClick.bind(this);\r\n        this.createWall = this.createWall.bind(this);\r\n        this.reset = this.reset.bind(this);\r\n\r\n        this.state = {\r\n            field: [],\r\n            uiMode: \"set start\",\r\n            col: this.props.col,\r\n            row: this.props.row\r\n        }\r\n    }\r\n\r\n    reset() {\r\n        this.setState({ uiMode: \"set start\" })\r\n        this.finder.reset();\r\n        this.finder.drawField();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.finder.init(this.state.col, this.state.row, (data) => this.setState({ field: data }), (data) => this.setState({ uiMode: data }));\r\n    }\r\n\r\n    nodeOnClick(node) {\r\n        /* set start and end node */\r\n        if (this.finder && this.finder.finished) return console.log(\"already finished. reset and start again\")\r\n        if (this.finder && this.finder.running) return console.log(\"currently running. reset and start again\")\r\n\r\n        if (this.state.uiMode === \"SET START\") {\r\n            return this.finder.setStartNode(node);\r\n        }\r\n        if (this.state.uiMode === \"SET END\") {\r\n            return this.finder.setEndNode(node);\r\n        }\r\n\r\n    }\r\n\r\n    createWall(node) {\r\n        /* create walls */\r\n        if (this.finder && this.finder.finished) return console.log(\"already finished. reset and start again\")\r\n        if (this.finder && this.finder.running) return console.log(\"currently running. reset and start again\")\r\n\r\n        if (this.state.uiMode === \"SET BLOCKED\") {\r\n            if (node === this.finder.start || node === this.finder.end) return\r\n            node.draw = 5;\r\n            node.blocked = true;\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <>  \r\n                {this.finder.fieldWidth&&\r\n                    <UiContainer \r\n                        finder={this.finder} \r\n                        reset={this.reset}\r\n                        uiMode={this.state.uiMode}\r\n                        updateDim={(col, row)=>this.setState({col: col, row: row})}\r\n                    />}\r\n                <Field \r\n                    nodeOnClick={this.nodeOnClick} \r\n                    createWall={this.createWall} \r\n                    field={this.state.field} \r\n                    row={this.state.row} \r\n                    col={this.state.col}\r\n                />\r\n\r\n            </>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './App.css';\r\nimport AStar from './components/AStar';\r\n//import Field from './components/aStar/FieldWithCanvasRenderer';\r\n\r\n\r\n\r\nfunction App() {\r\n  \r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <AStar col={22} row={18} frameRate={20}/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}